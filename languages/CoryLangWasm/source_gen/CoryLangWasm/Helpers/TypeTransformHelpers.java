package CoryLangWasm.Helpers;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SEnumOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.EnumerationLiteralsIndex;
import org.jetbrains.mps.openapi.language.SProperty;
import org.jetbrains.mps.openapi.language.SContainmentLink;

public class TypeTransformHelpers {
  public static SNode toWasmTypeResultType(Iterable<SNode> args, TransformState state) {
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xf0ceec7784bd4104L, 0xb53284a17dffbb8aL, 0x601bfff8ed7aee8aL, "WebAssembly.structure.ResultType"));

    for (SNode paramOrResult : Sequence.fromIterable(args)) {
      SNode typeContainer = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xf0ceec7784bd4104L, 0xb53284a17dffbb8aL, 0x601bfff8ed7d6e6cL, "WebAssembly.structure.ValTypeContainer"));

      switch (enumSwitchIndex.indexNullable(SPropertyOperations.getEnum(paramOrResult, PROPS.type$RW2q))) {
        case 0:
          SPropertyOperations.assignEnum(typeContainer, PROPS.valtype$$P7n, SEnumOperations.getMember(MetaAdapterFactory.getEnumeration(0xf0ceec7784bd4104L, 0xb53284a17dffbb8aL, 0x601bfff8ed7a49abL, "WebAssembly.structure.ValType"), 0x601bfff8ed7a49acL, "i32"));
          break;
        case 1:
          SPropertyOperations.assignEnum(typeContainer, PROPS.valtype$$P7n, SEnumOperations.getMember(MetaAdapterFactory.getEnumeration(0xf0ceec7784bd4104L, 0xb53284a17dffbb8aL, 0x601bfff8ed7a49abL, "WebAssembly.structure.ValType"), 0x601bfff8ed7a49adL, "i64"));
          break;
        case 2:
          SPropertyOperations.assignEnum(typeContainer, PROPS.valtype$$P7n, SEnumOperations.getMember(MetaAdapterFactory.getEnumeration(0xf0ceec7784bd4104L, 0xb53284a17dffbb8aL, 0x601bfff8ed7a49abL, "WebAssembly.structure.ValType"), 0x601bfff8ed7a49b0L, "f32"));
          break;
        case 3:
          SPropertyOperations.assignEnum(typeContainer, PROPS.valtype$$P7n, SEnumOperations.getMember(MetaAdapterFactory.getEnumeration(0xf0ceec7784bd4104L, 0xb53284a17dffbb8aL, 0x601bfff8ed7a49abL, "WebAssembly.structure.ValType"), 0x601bfff8ed7a49b4L, "f64"));
          break;
      }

      ListSequence.fromList(SLinkOperations.getChildren(result, LINKS.data$_MXP)).addElement(typeContainer);
    }

    return result;
  }
  private static final EnumerationLiteralsIndex enumSwitchIndex = EnumerationLiteralsIndex.build(0xbe6061dd252a45b8L, 0x9db81233f2660809L, 0x7c255ef74f4f054cL, 0x7c255ef74f4f054dL, 0x7c255ef74f4f0580L, 0x7c255ef74f4f058dL, 0x7c255ef74f4f05a5L);

  private static final class PROPS {
    /*package*/ static final SProperty valtype$$P7n = MetaAdapterFactory.getProperty(0xf0ceec7784bd4104L, 0xb53284a17dffbb8aL, 0x601bfff8ed7d6e6cL, 0x601bfff8ed7d6e72L, "valtype");
    /*package*/ static final SProperty type$RW2q = MetaAdapterFactory.getProperty(0xbe6061dd252a45b8L, 0x9db81233f2660809L, 0x7c255ef74f4f0792L, 0x7c255ef74f4f0801L, "type");
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink data$_MXP = MetaAdapterFactory.getContainmentLink(0xf0ceec7784bd4104L, 0xb53284a17dffbb8aL, 0x601bfff8ed7aee8aL, 0x601bfff8edb08d02L, "data");
  }
}
