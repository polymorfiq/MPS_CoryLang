package CoryLang.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myModule__BehaviorDescriptor = new Module__BehaviorDescriptor();
  private final BHDescriptor myFunction__BehaviorDescriptor = new Function__BehaviorDescriptor();
  private final BHDescriptor myImport__BehaviorDescriptor = new Import__BehaviorDescriptor();
  private final BHDescriptor myLabel__BehaviorDescriptor = new Label__BehaviorDescriptor();
  private final BHDescriptor myFunctionIndexed__BehaviorDescriptor = new FunctionIndexed__BehaviorDescriptor();
  private final BHDescriptor myLocalIndexed__BehaviorDescriptor = new LocalIndexed__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    SAbstractConcept cncpt = concept;
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return myFunction__BehaviorDescriptor;
      case 1:
        return myFunctionIndexed__BehaviorDescriptor;
      case 2:
        return myImport__BehaviorDescriptor;
      case 3:
        return myLabel__BehaviorDescriptor;
      case 4:
        return myLocalIndexed__BehaviorDescriptor;
      case 5:
        return myModule__BehaviorDescriptor;
      default:
    }
    return null;
  }
  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xbe6061dd252a45b8L, 0x9db81233f2660809L, 0x39e7fc40f9b5e368L), MetaIdFactory.conceptId(0xbe6061dd252a45b8L, 0x9db81233f2660809L, 0x7c255ef7543b7565L), MetaIdFactory.conceptId(0xbe6061dd252a45b8L, 0x9db81233f2660809L, 0x7c255ef750704824L), MetaIdFactory.conceptId(0xbe6061dd252a45b8L, 0x9db81233f2660809L, 0x7c255ef750768d1aL), MetaIdFactory.conceptId(0xbe6061dd252a45b8L, 0x9db81233f2660809L, 0x7c255ef7548b1045L), MetaIdFactory.conceptId(0xbe6061dd252a45b8L, 0x9db81233f2660809L, 0x39e7fc40f9b5e367L)).seal();
}
